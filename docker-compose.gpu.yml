# Docker Compose Override for GPU Development
# This file can be used to override default settings for local GPU development
# Usage: docker-compose -f docker-compose.yml -f docker-compose.gpu.yml up

services:
  devcontainer:
    # Alternative runtime specification (use if 'runtime: nvidia' doesn't work)
    # device_requests:
    #   - driver: nvidia
    #     count: all
    #     capabilities: [gpu]
    
    # Explicit GPU device mapping (use if deploy.resources doesn't work)
    # devices:
    #   - "/dev/nvidia0:/dev/nvidia0"
    #   - "/dev/nvidiactl:/dev/nvidiactl"
    #   - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    
    # Additional environment variables for debugging
    environment:
      - CI
      - OPENAI_API_KEY
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0
      - CUDA_DEVICE_ORDER=PCI_BUS_ID
      # Enable CUDA debugging
      - CUDA_LAUNCH_BLOCKING=1
      # For older Docker versions
      - NVIDIA_REQUIRE_CUDA="cuda>=12.0"
    
    # Resource limits (optional - adjust based on your needs)
    # mem_limit: 16g
    # memswap_limit: 16g
    # shm_size: 2g
    
    # Additional volumes for GPU development
    volumes:
      - ..:/workspaces
      - command-history-volume:/home/user/.history/
      # Mount CUDA cache for faster rebuilds (optional)
      # - cuda-cache:/root/.nv
      
    # Override build context for GPU-specific Dockerfile changes
    build:
      target: dev
      args:
        - CUDA_VERSION=12.4
        - PYTHON_VERSION=3.10

volumes:
  command-history-volume:
  # cuda-cache:
