{
    "name": "raglite",
    "dockerComposeFile": "../docker-compose.yml",
    "service": "devcontainer",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}/",
    "features": {
        "ghcr.io/devcontainers-extra/features/starship:1": {},
        // CUDA toolkit feature for GPU
        "ghcr.io/devcontainers/features/cuda:1": {}
    },
    "overrideCommand": true,
    "remoteUser": "user",
    // Mount host A: drive for Roo code access
    "mounts": [
        "source=/mnt/a,target=/mnt/a,type=bind"
    ],
    "postStartCommand": "sudo chown -R user:user /opt/ && uv sync --python ${localEnv:PYTHON_VERSION:3.10} --resolution ${localEnv:RESOLUTION_STRATEGY:highest} --all-extras && pip install gemini-cli && pre-commit install --install-hooks && echo 'ðŸ”„ Installing Ollama...' && curl -fsSL https://ollama.ai/install.sh | sh && echo 'ðŸ“¥ Pulling embedding models...' && (ollama pull nomic-embed-text || ollama pull all-minilm)",
    "customizations": {
        "jetbrains": {
            "backend": "PyCharm",
            "plugins": [
                "com.github.copilot"
            ]
        },
        "vscode": {
            "extensions": [
                "charliermarsh.ruff",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "GitHub.vscode-github-actions",
                "GitHub.vscode-pull-request-github",
                "ms-azuretools.vscode-docker",
                "ms-python.mypy-type-checker",
                "ms-python.python",
                "ms-toolsai.jupyter",
                "ryanluker.vscode-coverage-gutters",
                "tamasfe.even-better-toml",
                "visualstudioexptteam.vscodeintellicode",
                // Roo code CLIs (pinned to match host)
                "RooVeterinaryInc.roo-cline@3.22.4",
                // Model Context Protocol tools
                "Upstash.context7-mcp",
                "ms-azuretools.vscode-azure-mcp-server"
            ],
            "settings": {
                "coverage-gutters.coverageFileNames": [
                    "reports/coverage.xml"
                ],
                "editor.codeActionsOnSave": {
                    "source.fixAll": "explicit",
                    "source.organizeImports": "explicit"
                },
                "editor.formatOnSave": true,
                "[python]": {
                    "editor.defaultFormatter": "ms-python.python"
                },
                "[toml]": {
                    "editor.formatOnSave": false
                },
                "editor.rulers": [
                    100
                ],
                "files.autoSave": "onFocusChange",
                "github.copilot.chat.agent.enabled": true,
                "github.copilot.chat.codesearch.enabled": true,
                "github.copilot.chat.edits.enabled": true,
                "github.copilot.nextEditSuggestions.enabled": true,
                "jupyter.kernels.excludePythonEnvironments": [
                    "/usr/local/bin/python"
                ],
                "mypy-type-checker.importStrategy": "fromEnvironment",
                "mypy-type-checker.preferDaemon": true,
                "notebook.codeActionsOnSave": {
                    "notebook.source.fixAll": "explicit",
                    "notebook.source.organizeImports": "explicit"
                },
                "notebook.formatOnSave.enabled": true,
                "python.defaultInterpreterPath": "/opt/venv/bin/python",
                "python.terminal.activateEnvironment": false,
                "python.testing.pytestEnabled": true,
                "ruff.importStrategy": "fromEnvironment",
                "ruff.logLevel": "warning",
                "terminal.integrated.env.linux": {
                    "GIT_EDITOR": "code --wait"
                },
                "terminal.integrated.env.mac": {
                    "GIT_EDITOR": "code --wait"
                },
                // Copilot: enable suggestions and inline completion
                "github.copilot": {
                    "enable": true,
                    "autocomplete": true,
                    "inlineSuggest": { "enable": true }
                }
            }
        }
    }
}