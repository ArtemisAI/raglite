# Docker Compose Fallback Configuration
# Use this if you have issues with GPU runtime or modern Docker GPU support
# Usage: docker-compose -f docker-compose.yml -f docker-compose.fallback.yml up

services:
  devcontainer:
    # Alternative GPU configuration for compatibility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Alternative: explicit device mapping (uncomment if deploy.resources doesn't work)
    # devices:
    #   - "/dev/nvidia0:/dev/nvidia0"
    #   - "/dev/nvidiactl:/dev/nvidiactl"
    #   - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    
    # CPU-only mode (comment out deploy section above and uncomment below)
    # environment:
    #   - RAGLITE_DISABLE_GPU=1
    
    # Additional debugging environment
    environment:
      - CI
      - OPENAI_API_KEY
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0
      - CUDA_DEVICE_ORDER=PCI_BUS_ID
      # Enable CUDA debugging
      - CUDA_LAUNCH_BLOCKING=1
      # For older Docker versions
      - NVIDIA_REQUIRE_CUDA="cuda>=12.0"
      # Fallback to CPU if GPU fails
      - RAGLITE_GPU_FALLBACK_ENABLED=true
    
    # Resource limits (optional)
    mem_limit: 16g
    memswap_limit: 16g
    shm_size: 2g