---
name: "Copilot Setup Steps"
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # Python project environment variables
      PYTHON_VERSION: "3.11"
      NODE_ENV: development
      # GPU support (will be detected and configured automatically)
      OLLAMA_CUDA_SUPPORT: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt',
            'pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install from requirements files with fallbacks
          pip install -r requirements.txt -r requirements-dev.txt || {
            echo "Requirements files install failed, trying individual packages..."
            pip install sqlite-vec pynndescent torch llama-cpp-python faiss-cpu openai pandas pytest mypy ruff
          }
          # Install package in development mode
          pip install -e .[dev,gpu,bench] || pip install -e . || pip install .

      - name: Setup Node.js with Yarn fallback
        run: |
          # Install yarn as fallback for npm
          npm install -g yarn || true
          # Cache Node modules if package.json exists
          if [ -f "package.json" ]; then
            npm install || yarn install || \
              echo "Node.js dependency install failed"
          fi

      - name: Run environment setup script
        run: |
          chmod +x .github/setup-environment.sh
          ./.github/setup-environment.sh

      - name: Install Node.js for MCP (if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # No cache since we don't have package.json/lock files

      - name: Run tests
        run: |
          python -m pytest tests/ -v --tb=short

      - name: Validate SQLite backend
        run: |
          python -c "
          import sqlite3
          conn = sqlite3.connect('tests/test_raglite.db')
          cursor = conn.cursor()
          cursor.execute('SELECT COUNT(*) FROM documents')
          print(f'Documents: {cursor.fetchone()[0]}')
          conn.close()
          "

      - name: Check documentation
        run: |
          ls -la .github/
          echo "âœ… GitHub Copilot setup files present"
